@page "/edit-games-collection"
@inject NavigationManager NavigationManager
@inject GamesClient Client
@inject GenresClient GenresClient

<PageTitle>New Game</PageTitle>
<h3>Add New Game</h3>

@if(genres is null)
{
    <p><em>Loading...</em></p>
}

else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@gameDetails" FormName="EditGame" OnSubmit="HandleSubmit">
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="gameDetails.Name" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputSelect id="genre" @bind-Value="gameDetails.GenreID" class="form-select">
                        <option value="">Select a Genre</option>
                        @foreach(var genre in genres)
                        {
                            <option value="@genre.ID">@genre.Name</option>
                        }
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" @bind-Value="gameDetails.Price" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date:</label>
                    <InputDate id="releaseDate" @bind-Value="gameDetails.ReleaseDate" class="form-control" />
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a role="button" class="btn btn-secondary" href="/">Cancel</a>
            </EditForm>
        </div>
    </div>
}

@code {
    [SupplyParameterFromForm]
    private GameDetails gameDetails {get; set;} = new()
    {
        Name = string.Empty,
        ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
    };
    private Genres[]? genres;

    protected override void OnInitialized()
    {
        genres = GenresClient.GetGenres();
    }

    private void HandleSubmit()
    {
        Client.AddGame(gameDetails);
        NavigationManager.NavigateTo("/");
    }
}
